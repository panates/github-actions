name: "GitHub Release"
on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: "GitHub Release Tag"
        required: true
    secrets:
      PERSONAL_ACCESS_TOKEN:
        description: "Github personal access token"
        required: true
      DOCKERHUB_USERNAME:
        description: "DockerHub user name"
        required: false
      DOCKERHUB_PASS:
        description: "DockerHub password"
        required: false

jobs:
  # ***********************************
  # Job: Create GitHub release
  # ***********************************
  github_release:
    name: 'Create Github Release'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'artifacts'
          path: './__artifacts'

      - name: "Loop over projects.json and create ZIP files"
        run: |
          mkdir -p __release
          
          # Check if `projects.json` File Exists
          if [ ! -f "__artifacts/projects.json" ]; then
            echo "Error: __artifacts/projects.json does not exist"
            exit 1
          fi
          
          # Check if the JSON File is Valid
          jq . __artifacts/projects.json
          
          # Check if projects.json` is an empty JSON file
          if [ "$(jq length __artifacts/projects.json)" -eq 0 ]; then
            echo "Error: __artifacts/projects.json is empty or does not contain an array"
            exit 1
          fi
          
          
          for project in $(jq -c '.[]' __artifacts/projects.json); do
            # Extract directory name from JSON
            directory=$(echo "$project" | jq -r '.directory')
            # Ensure directory is valid
            if [ -z "$directory" ]; then
              echo "Error: 'directory' field is missing or empty in JSON entry: $project"
              exit 1
            fi            
            
            # Target zip file path
            zip_file="__release/$directory.zip"              
          
            echo "Creating zip for: $directory"
          
            # Create zip file from the directory inside __artifacts
            zip -r "$zip_file" "__artifacts/$directory"
          
            echo "Created: $zip_file"
          done

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.tag }}
          bodyFile: "__artifacts/COMMIT_CHANGELOG.md"
          artifacts: "__release/**/*"
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          draft: false
          prerelease: false
          replacesArtifacts: true
