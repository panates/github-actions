name: "Build"
on:
  workflow_call:
    inputs:
      build_script:
        type: string
        description: "Build script to be executed"
        default: 'npm run build'
    secrets:
      PERSONAL_ACCESS_TOKEN:
        description: "Github personal access token"
        required: true

jobs:
  # ***********************************
  # Job: Build Packages
  # ***********************************
  build:
    name: "Build Packages"
    runs-on: ubuntu-latest
    steps:
      - name: "Setup Environment"
        uses: panates/gh-setup-node@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: "Scan Environment"
        id: environment
        uses: panates/gh-repository-info@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}


      - name: "Build Changelog"
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fromTag: ${{ steps.environment.outputs.lastSha }}
          toTag: ${{ steps.environment.outputs.lastSha }}
          mode: COMMIT
          outputFile: "COMMIT_CHANGELOG.md"
          configurationJson: |
            {                                          
              "categories": [
                {
                    "title": "## üöÄ Features",
                    "labels": ["feat", "feature"]
                },
                {
                   "title": "## ü™≤ Fixes",
                    "labels": ["fix", "bug"]
                },
                {
                    "title": "## üõ†Ô∏è Updates",
                    "labels": ["refactor", "update", "perf", "style"]
                },
                {
                    "title": "## üß™ Tests",
                    "key": "tests",
                    "labels": ["test"]
                },
                {
                    "title": "## üìñ Documentation",
                    "labels": ["doc"]
                },
                {
                    "title": "## üí¨ Other",
                    "labels": ["ci", ""]
                }
              ],
              "ignore_labels": [
                  "ignore", "chore", "dev"
              ],
              "sort": {
                  "order": "ASC",
                  "on_property": "mergedAt"
              },
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|update|refactor|revert|style|test|ignore){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "target": "$1"
                }
              ]
            }

      - name: "debug 1"
        run: |
          echo "${{ steps.changelog.outputs.changelog }}"

      - name: "debug 2"
        run: |
          cat COMMIT_CHANGELOG.md

#      - name: "Build"
#        shell: bash
#        run: |
#          ${{ inputs.build_script }}
#
      - name: Parse Directories in Bash
        shell: bash
        run: |
          PACKAGES='${{ steps.environment.outputs.packages }}'
           
          echo "Processing packages..."
          echo "$PACKAGES" | jq -c '.[]' | while IFS= read -r package; do
            name=$(echo "$package" | jq -r '.name')
            version=$(echo "$package" | jq -r '.version')
          
            echo "Package Name: $name"
            echo "Package Version: $version"
          done
